<?
	class UPGRADE_1_0_0 extends UPGRADE {

		function upgrade_init_db() {

			return $this->query_script("-- MySQL Script generated by MySQL Workbench
-- 03/17/16 22:15:15
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `accounts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `accounts` (
  `account_id` INT NOT NULL AUTO_INCREMENT,
  `root_account_id` INT NULL DEFAULT NULL,
  `parent_account_id` INT NULL DEFAULT NULL,
  `state` CHAR(40) NOT NULL,
  `name` VARCHAR(40) NULL DEFAULT NULL,
  `priority` INT NULL DEFAULT 99,
  `type` CHAR(1) NOT NULL,
  `configs` TEXT NULL DEFAULT NULL,
  `guid` VARCHAR(40) NULL DEFAULT NULL,
  `image_time` INT NULL DEFAULT NULL,
  PRIMARY KEY (`account_id`),
  CONSTRAINT `FK_accounts_accounts`
	FOREIGN KEY (`parent_account_id`)
	REFERENCES `accounts` (`account_id`),
  CONSTRAINT `FK_accounts_accounts2`
	FOREIGN KEY (`root_account_id`)
	REFERENCES `accounts` (`account_id`));

CREATE INDEX `FK_accounts_accounts_idx` ON `accounts` (`parent_account_id` ASC);

CREATE INDEX `FK_accounts_accounts2_idx` ON `accounts` (`root_account_id` ASC);


-- -----------------------------------------------------
-- Table `fields`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `fields` (
  `field_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(40) NULL DEFAULT NULL,
  `interface` CHAR(1) NOT NULL,
  `state` CHAR(1) NOT NULL,
  `tag` VARCHAR(40) NULL DEFAULT NULL,
  `guid` VARCHAR(40) NULL DEFAULT NULL,
  `configs` VARCHAR(200) NULL DEFAULT NULL,
  PRIMARY KEY (`field_id`));


-- -----------------------------------------------------
-- Table `objects`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `objects` (
  `object_id` INT NOT NULL AUTO_INCREMENT,
  `state` VARCHAR(15) NOT NULL,
  `name` VARCHAR(40) NULL DEFAULT NULL,
  `create_date` DATETIME NULL DEFAULT NULL,
  `object_type` CHAR(1) NOT NULL,
  `image_time` INT NULL,
  `guid` VARCHAR(40) NULL DEFAULT NULL,
  `configs` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`object_id`));


-- -----------------------------------------------------
-- Table `addresses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `addresses` (
  `address_id` INT NOT NULL AUTO_INCREMENT,
  `state` VARCHAR(20) NULL,
  `address1` VARCHAR(40) NULL,
  `address2` VARCHAR(40) NULL,
  `city` VARCHAR(40) NULL,
  `region` VARCHAR(40) NULL,
  `zip` VARCHAR(40) NULL,
  `country` VARCHAR(2) NULL,
  `lat` DECIMAL(16,13) NULL,
  `lng` DECIMAL(16,13) NULL,
  `create_date` DATETIME NULL,
  `modify_date` DATETIME NULL,
  `guid` VARCHAR(40) NULL,
  PRIMARY KEY (`address_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `users` (
  `user_id` INT(11) NOT NULL AUTO_INCREMENT,
  `object_id` INT NOT NULL,
  `email` VARCHAR(40) CHARACTER SET 'utf8' NULL DEFAULT NULL,
  `password` VARCHAR(40) CHARACTER SET 'utf8' NOT NULL,
  `first_name` VARCHAR(20) NULL DEFAULT NULL,
  `last_name` VARCHAR(20) NULL DEFAULT NULL,
  `phone` VARCHAR(15) NULL DEFAULT NULL,
  `avatar_time` INT NULL DEFAULT NULL,
  `permissions` VARCHAR(500) NULL,
  `address_id` INT NOT NULL,
  `last_login` DATETIME NULL,
  PRIMARY KEY (`user_id`),
  CONSTRAINT `FK_users_objects`
	FOREIGN KEY (`object_id`)
	REFERENCES `objects` (`object_id`),
  CONSTRAINT `fk_users_addresses1`
	FOREIGN KEY (`address_id`)
	REFERENCES `addresses` (`address_id`)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION);

CREATE INDEX `FK_users_objects_idx` ON `users` (`object_id` ASC);

CREATE INDEX `fk_users_addresses1_idx` ON `users` (`address_id` ASC);


-- -----------------------------------------------------
-- Table `account_users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `account_users` (
  `account_user_id` INT NOT NULL AUTO_INCREMENT,
  `root_account_id` INT NOT NULL,
  `account_id` INT NOT NULL,
  `user_id` INT(11) NOT NULL,
  `state` CHAR(1) NULL DEFAULT NULL,
  `roles` VARCHAR(500) NULL DEFAULT NULL,
  `premissions` VARCHAR(500) NULL DEFAULT NULL,
  `defaut` CHAR(1) NULL DEFAULT 0,
  PRIMARY KEY (`account_user_id`),
  CONSTRAINT `FK_account_users_accounts`
	FOREIGN KEY (`account_id`)
	REFERENCES `accounts` (`account_id`),
  CONSTRAINT `FK_account_users_users`
	FOREIGN KEY (`user_id`)
	REFERENCES `users` (`user_id`),
  CONSTRAINT `FK_account_users_accounts2`
	FOREIGN KEY (`root_account_id`)
	REFERENCES `accounts` (`account_id`));

CREATE INDEX `FK_account_users_accounts_idx` ON `account_users` (`account_id` ASC);

CREATE INDEX `FK_account_users_users_idx` ON `account_users` (`user_id` ASC);

CREATE INDEX `FK_account_users_accounts2_idx` ON `account_users` (`root_account_id` ASC);


-- -----------------------------------------------------
-- Table `api_tokens`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `api_tokens` (
  `api_token_id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT(11) NOT NULL,
  `create_date` DATETIME NULL DEFAULT NULL,
  `key` VARCHAR(100) NULL DEFAULT NULL,
  `state` CHAR(1) NULL DEFAULT NULL,
  `ip` VARCHAR(20) NULL DEFAULT NULL,
  `user_agent` VARCHAR(250) NULL DEFAULT NULL,
  `masked_ip` VARCHAR(45) NULL,
  `expiry_date` DATETIME,
  PRIMARY KEY (`api_token_id`),
  CONSTRAINT `FK_api_tokens_users`
	FOREIGN KEY (`user_id`)
	REFERENCES `users` (`user_id`));

CREATE INDEX `FK_api_tokens_users_idx` ON `api_tokens` (`user_id` ASC);


-- -----------------------------------------------------
-- Table `field_values`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `field_values` (
  `field_value_id` INT NOT NULL AUTO_INCREMENT,
  `field_id` INT NOT NULL,
  `string` VARCHAR(1000) NULL DEFAULT NULL,
  `integer` INT NULL DEFAULT NULL,
  PRIMARY KEY (`field_value_id`),
  CONSTRAINT `FK_field_values_fields`
	FOREIGN KEY (`field_id`)
	REFERENCES `fields` (`field_id`));

CREATE INDEX `FK_field_values_fields_idx` ON `field_values` (`field_id` ASC);


-- -----------------------------------------------------
-- Table `field_options`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `field_options` (
  `field_option_id` INT NOT NULL AUTO_INCREMENT,
  `field_id` INT NOT NULL,
  `state` CHAR(1) NOT NULL,
  `guid` VARCHAR(40) NOT NULL,
  `label` VARCHAR(200) NULL DEFAULT NULL,
  `amount` DECIMAL(10,2) NULL DEFAULT NULL,
  `metas` VARCHAR(200) NULL DEFAULT NULL,
  PRIMARY KEY (`field_option_id`),
  CONSTRAINT `FK_field_options_fields`
	FOREIGN KEY (`field_id`)
	REFERENCES `fields` (`field_id`));

CREATE INDEX `FK_field_options_fields_idx` ON `field_options` (`field_id` ASC);


-- -----------------------------------------------------
-- Table `field_value_options`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `field_value_options` (
  `field_value_option_id` INT NOT NULL AUTO_INCREMENT,
  `field_id` INT NOT NULL,
  `field_option_id` INT NOT NULL,
  `field_value_id` INT NOT NULL,
  PRIMARY KEY (`field_value_option_id`),
  CONSTRAINT `FK_field_value_options_fields`
	FOREIGN KEY (`field_id`)
	REFERENCES `fields` (`field_id`),
  CONSTRAINT `FK_field_value_options_field_options`
	FOREIGN KEY (`field_option_id`)
	REFERENCES `field_options` (`field_option_id`),
  CONSTRAINT `FK_field_value_options_field_values`
	FOREIGN KEY (`field_value_id`)
	REFERENCES `field_values` (`field_value_id`));

CREATE INDEX `FK_field_value_options_fields_idx` ON `field_value_options` (`field_id` ASC);

CREATE INDEX `FK_field_value_options_field_options_idx` ON `field_value_options` (`field_option_id` ASC);

CREATE INDEX `FK_field_value_options_field_values_idx` ON `field_value_options` (`field_value_id` ASC);


-- -----------------------------------------------------
-- Table `messages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `messages` (
  `message_id` INT(11) NOT NULL AUTO_INCREMENT,
  `state` CHAR(1) CHARACTER SET 'utf8' NOT NULL,
  `types` VARCHAR(50) CHARACTER SET 'utf8' NOT NULL,
  `name` VARCHAR(50) CHARACTER SET 'utf8' NULL DEFAULT NULL,
  `tag` VARCHAR(100) NULL DEFAULT NULL,
  `guid` VARCHAR(40) NULL DEFAULT NULL,
  `description` VARCHAR(500) NULL DEFAULT NULL,
  PRIMARY KEY (`message_id`));


-- -----------------------------------------------------
-- Table `message_queues`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `message_queues` (
  `message_queue_id` INT(11) NOT NULL AUTO_INCREMENT,
  `message_id` INT(11) NOT NULL,
  `attempts` SMALLINT(6) NULL DEFAULT 0,
  `scheduled_date` DATETIME NULL DEFAULT NULL,
  `created_date` DATETIME NULL DEFAULT NULL,
  `state` CHAR(1) CHARACTER SET 'utf8' NOT NULL,
  `type` CHAR(1) NOT NULL,
  `sent_date` DATETIME NULL DEFAULT NULL,
  `sms` TEXT NULL DEFAULT NULL,
  `email` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`message_queue_id`),
  CONSTRAINT `FK_message_queues_messages`
	FOREIGN KEY (`message_id`)
	REFERENCES `messages` (`message_id`));

CREATE INDEX `FK_message_queues_messages_idx` ON `message_queues` (`message_id` ASC);


-- -----------------------------------------------------
-- Table `message_templates`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `message_templates` (
  `message_template_id` INT NOT NULL AUTO_INCREMENT,
  `state` CHAR(1) NOT NULL,
  `guid` VARCHAR(40) NULL DEFAULT NULL,
  `name` VARCHAR(40) NULL DEFAULT NULL,
  `content` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`message_template_id`));


-- -----------------------------------------------------
-- Table `email_messages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `email_messages` (
  `email_message_id` INT(11) NOT NULL,
  `message_template_id` INT NULL DEFAULT NULL,
  `format` CHAR(1) CHARACTER SET 'utf8' NULL DEFAULT NULL,
  `subject` VARCHAR(255) CHARACTER SET 'utf8' NULL DEFAULT NULL,
  `body` TEXT CHARACTER SET 'utf8' NULL DEFAULT NULL,
  `from_email` VARCHAR(100) NULL DEFAULT NULL,
  `from_name` VARCHAR(100) NULL DEFAULT NULL,
  `to_recipients` VARCHAR(500) NULL DEFAULT NULL,
  `cc_recipients` VARCHAR(500) NULL DEFAULT NULL,
  `bcc_recipients` VARCHAR(500) NULL DEFAULT NULL,
  PRIMARY KEY (`email_message_id`),
  CONSTRAINT `FK_email_messages_messages`
	FOREIGN KEY (`email_message_id`)
	REFERENCES `messages` (`message_id`),
  CONSTRAINT `FK_email_messages_message_templates`
	FOREIGN KEY (`message_template_id`)
	REFERENCES `message_templates` (`message_template_id`));

CREATE INDEX `FK_email_messages_message_templates_idx` ON `email_messages` (`message_template_id` ASC);


-- -----------------------------------------------------
-- Table `email_message_queues`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `email_message_queues` (
  `email_message_queue_id` INT(11) NOT NULL,
  `body` TEXT CHARACTER SET 'utf8' NULL DEFAULT NULL,
  `format` CHAR(1) CHARACTER SET 'utf8' NULL DEFAULT NULL,
  `subject` VARCHAR(255) CHARACTER SET 'utf8' NULL DEFAULT NULL,
  `to_recipients` VARCHAR(255) CHARACTER SET 'utf8' NULL DEFAULT NULL,
  `cc_recipients` VARCHAR(255) CHARACTER SET 'utf8' NULL DEFAULT NULL,
  `bcc_recipients` VARCHAR(255) CHARACTER SET 'utf8' NULL DEFAULT NULL,
  `from_email` VARCHAR(40) NULL DEFAULT NULL,
  `from_name` VARCHAR(40) NULL DEFAULT NULL,
  PRIMARY KEY (`email_message_queue_id`),
  CONSTRAINT `FK_email_message_queues_message_queues`
	FOREIGN KEY (`email_message_queue_id`)
	REFERENCES `message_queues` (`message_queue_id`));


-- -----------------------------------------------------
-- Table `ff_article_authors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ff_article_authors` (
  `article_author_id` INT NOT NULL AUTO_INCREMENT,
  `state` CHAR(1) NULL DEFAULT NULL,
  `name` VARCHAR(40) NULL DEFAULT NULL,
  `guid` VARCHAR(40) NULL DEFAULT NULL,
  PRIMARY KEY (`article_author_id`));


-- -----------------------------------------------------
-- Table `ff_article_templates`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ff_article_templates` (
  `article_template_id` INT NOT NULL AUTO_INCREMENT,
  `state` CHAR(1) NULL DEFAULT NULL,
  `content` TEXT NULL DEFAULT NULL,
  `name` VARCHAR(40) NULL DEFAULT NULL,
  `type` CHAR(1) NULL DEFAULT NULL,
  PRIMARY KEY (`article_template_id`));


-- -----------------------------------------------------
-- Table `ff_articles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ff_articles` (
  `article_id` INT NOT NULL AUTO_INCREMENT,
  `article_author_id` INT NULL DEFAULT NULL,
  `article_template_id` INT NULL DEFAULT NULL,
  `title` VARCHAR(300) NULL DEFAULT NULL,
  `create_date` DATETIME NULL DEFAULT NULL,
  `publish_date` DATETIME NULL DEFAULT NULL,
  `modify_date` DATETIME NULL DEFAULT NULL,
  `views` INT NULL DEFAULT 0,
  `guid` VARCHAR(40) NULL DEFAULT NULL,
  `url` VARCHAR(100) NULL DEFAULT NULL,
  `content` TEXT NULL DEFAULT NULL,
  `meta` TEXT NULL DEFAULT NULL,
  `social` TEXT NULL DEFAULT NULL,
  `css` TEXT NULL DEFAULT NULL,
  `js` TEXT NULL DEFAULT NULL,
  `state` CHAR(1) NULL DEFAULT NULL,
  `type` CHAR(1) NULL DEFAULT NULL,
  `configs` TEXT NULL DEFAULT NULL,
  `head` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`article_id`),
  CONSTRAINT `FK_ff_articles_ff_article_authors`
	FOREIGN KEY (`article_author_id`)
	REFERENCES `ff_article_authors` (`article_author_id`),
  CONSTRAINT `FK_ff_articles_ff_article_templates`
	FOREIGN KEY (`article_template_id`)
	REFERENCES `ff_article_templates` (`article_template_id`));

CREATE INDEX `FK_ff_articles_ff_article_authors_idx` ON `ff_articles` (`article_author_id` ASC);

CREATE INDEX `FK_ff_articles_ff_article_templates_idx` ON `ff_articles` (`article_template_id` ASC);


-- -----------------------------------------------------
-- Table `ff_article_categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ff_article_categories` (
  `article_category_id` INT NOT NULL AUTO_INCREMENT,
  `state` CHAR(1) NULL DEFAULT NULL,
  `name` VARCHAR(40) NULL DEFAULT NULL,
  PRIMARY KEY (`article_category_id`));


-- -----------------------------------------------------
-- Table `ff_article_category_categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ff_article_category_categories` (
  `article_category_category_id` INT NOT NULL AUTO_INCREMENT,
  `article_category_id` INT NOT NULL,
  `article_id` INT NOT NULL,
  PRIMARY KEY (`article_category_category_id`),
  CONSTRAINT `FK_ff_article_category_categories_ff_article_categories`
	FOREIGN KEY (`article_category_id`)
	REFERENCES `ff_article_categories` (`article_category_id`),
  CONSTRAINT `FK_ff_article_category_categories_ff_articles`
	FOREIGN KEY (`article_id`)
	REFERENCES `ff_articles` (`article_id`));

CREATE INDEX `FK_ff_article_category_categories_ff_article_categories_idx` ON `ff_article_category_categories` (`article_category_id` ASC);

CREATE INDEX `FK_ff_article_category_categories_ff_articles_idx` ON `ff_article_category_categories` (`article_id` ASC);


-- -----------------------------------------------------
-- Table `ff_article_revisions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ff_article_revisions` (
  `article_revision_id` INT NOT NULL AUTO_INCREMENT,
  `article_id` INT NOT NULL,
  `number` INT NULL DEFAULT NULL,
  `content` TEXT NULL DEFAULT NULL,
  `css` TEXT NULL DEFAULT NULL,
  `js` TEXT NULL DEFAULT NULL,
  `meta` TEXT NULL DEFAULT NULL,
  `social` TEXT NULL DEFAULT NULL,
  `title` VARCHAR(300) NULL DEFAULT NULL,
  PRIMARY KEY (`article_revision_id`),
  CONSTRAINT `FK_ff_article_revisions_ff_articles`
	FOREIGN KEY (`article_id`)
	REFERENCES `ff_articles` (`article_id`));

CREATE INDEX `FK_ff_article_revisions_ff_articles_idx` ON `ff_article_revisions` (`article_id` ASC);


-- -----------------------------------------------------
-- Table `ff_article_settings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ff_article_settings` (
  `article_setting_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(40) NULL DEFAULT NULL,
  `value` TEXT NULL DEFAULT NULL,
  `type` varchar(20),
  PRIMARY KEY (`article_setting_id`));


-- -----------------------------------------------------
-- Table `ff_forms`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ff_forms` (
  `form_id` INT NOT NULL AUTO_INCREMENT,
  `confirmation_message_id` INT(11) NULL DEFAULT NULL,
  `notification_message_id` INT(11) NULL DEFAULT NULL,
  `state` CHAR(1) NULL DEFAULT NULL,
  `name` VARCHAR(40) NULL DEFAULT NULL,
  `tag` VARCHAR(40) NULL DEFAULT NULL,
  `configs` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`form_id`),
  CONSTRAINT `FK_ff_article_forms_messages`
	FOREIGN KEY (`confirmation_message_id`)
	REFERENCES `messages` (`message_id`),
  CONSTRAINT `FK_ff_forms_messages`
	FOREIGN KEY (`notification_message_id`)
	REFERENCES `messages` (`message_id`));

CREATE INDEX `FK_ff_article_forms_messages_idx` ON `ff_forms` (`confirmation_message_id` ASC);

CREATE INDEX `FK_ff_forms_messages_idx` ON `ff_forms` (`notification_message_id` ASC);


-- -----------------------------------------------------
-- Table `ff_form_fields`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ff_form_fields` (
  `form_field_id` INT NOT NULL AUTO_INCREMENT,
  `form_id` INT NOT NULL,
  `name` VARCHAR(100) NULL DEFAULT NULL,
  `interface` CHAR(1) NOT NULL,
  `state` CHAR(1) NOT NULL,
  `tag` VARCHAR(40) NULL DEFAULT NULL,
  `guid` VARCHAR(40) NULL DEFAULT NULL,
  `configs` TEXT NULL DEFAULT NULL,
  `validations` TEXT NULL DEFAULT NULL,
  `placeholder` TEXT NULL DEFAULT NULL,
  `instruction` TEXT NULL DEFAULT NULL,
  `caption` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`form_field_id`),
  CONSTRAINT `FK_ff_form_fields_ff_forms`
	FOREIGN KEY (`form_id`)
	REFERENCES `ff_forms` (`form_id`));

CREATE INDEX `FK_ff_form_fields_ff_forms_idx` ON `ff_form_fields` (`form_id` ASC);


-- -----------------------------------------------------
-- Table `ff_logs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ff_logs` (
  `ff_log_id` INT NOT NULL AUTO_INCREMENT,
  `create_date` DATETIME NULL DEFAULT NULL,
  `line` INT NULL DEFAULT NULL,
  `file` VARCHAR(200) NULL,
  `message` VARCHAR(500) NULL DEFAULT NULL,
  `backtrace` TEXT NULL DEFAULT NULL,
  `notified` CHAR(1) NULL DEFAULT NULL,
  `notify_date` DATETIME NULL DEFAULT NULL,
  `notifiy_message` VARCHAR(500) NULL DEFAULT NULL,
  `url` VARCHAR(500) NULL DEFAULT NULL,
  `type` VARCHAR(20) NULL DEFAULT NULL,
  `server` TEXT NULL DEFAULT NULL,
  `post` TEXT NULL DEFAULT NULL,
  `get` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`ff_log_id`));


-- -----------------------------------------------------
-- Table `graphics`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `graphics` (
  `graphic_id` INT NOT NULL AUTO_INCREMENT,
  `state` CHAR(1) NULL DEFAULT NULL,
  `guid` VARCHAR(40) NULL DEFAULT NULL,
  `created_date` DATETIME NULL DEFAULT NULL,
  `name` VARCHAR(200) NULL DEFAULT NULL,
  `width` INT NULL DEFAULT NULL,
  `height` INT NULL DEFAULT NULL,
  `preview_time` INT NULL DEFAULT NULL,
  PRIMARY KEY (`graphic_id`));


-- -----------------------------------------------------
-- Table `graphic_blocks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `graphic_blocks` (
  `graphic_block_id` INT NOT NULL AUTO_INCREMENT,
  `graphic_id` INT NOT NULL,
  `value` MEDIUMTEXT NULL DEFAULT NULL,
  `font_name` VARCHAR(40) NULL DEFAULT NULL,
  `font_size` INT NULL DEFAULT NULL,
  `font_color` VARCHAR(40) NULL DEFAULT NULL,
  `x1` INT NULL DEFAULT NULL,
  `x2` INT NULL DEFAULT NULL,
  `y1` INT NULL DEFAULT NULL,
  `y2` INT NULL DEFAULT NULL,
  `halign` CHAR(1) NULL DEFAULT NULL,
  `type` CHAR(1) NULL DEFAULT NULL,
  `crop_x1` DECIMAL(7,2) NULL DEFAULT NULL,
  `crop_x2` DECIMAL(7,2) NULL DEFAULT NULL,
  `crop_y1` DECIMAL(7,2) NULL DEFAULT NULL,
  `crop_y2` DECIMAL(7,2) NULL DEFAULT NULL,
  `guid` VARCHAR(40) NULL DEFAULT NULL,
  `state` CHAR(1) NULL DEFAULT NULL,
  `index` SMALLINT NULL DEFAULT 0,
  PRIMARY KEY (`graphic_block_id`),
  CONSTRAINT `FK_graphic_blocks_graphics`
	FOREIGN KEY (`graphic_id`)
	REFERENCES `graphics` (`graphic_id`));

CREATE INDEX `FK_graphic_blocks_graphics_idx` ON `graphic_blocks` (`graphic_id` ASC);


-- -----------------------------------------------------
-- Table `sessions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sessions` (
  `session_id` INT NOT NULL AUTO_INCREMENT,
  `contact_id` INT NULL DEFAULT NULL,
  `id` VARCHAR(40) NULL DEFAULT NULL,
  `create_date` VARCHAR(40) NULL DEFAULT NULL,
  PRIMARY KEY (`session_id`));

CREATE UNIQUE INDEX `IX_sessions1_idx` ON `sessions` (`id` ASC);


-- -----------------------------------------------------
-- Table `internal_messages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `internal_messages` (
  `internal_message_id` INT(11) NOT NULL,
  `subject` VARCHAR(200) NULL DEFAULT NULL,
  `message` TEXT NULL DEFAULT NULL,
  `from` VARCHAR(100) NULL DEFAULT NULL,
  `to` VARCHAR(100) NULL DEFAULT NULL,
  PRIMARY KEY (`internal_message_id`),
  CONSTRAINT `FK_internal_messages_messages`
	FOREIGN KEY (`internal_message_id`)
	REFERENCES `messages` (`message_id`));


-- -----------------------------------------------------
-- Table `message_logs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `message_logs` (
  `message_log_id` INT NOT NULL AUTO_INCREMENT,
  `message_queue_id` INT(11) NOT NULL,
  `created_date` DATETIME NULL,
  `message` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`message_log_id`),
  CONSTRAINT `FK_message_logs_message_queues`
	FOREIGN KEY (`message_queue_id`)
	REFERENCES `message_queues` (`message_queue_id`));

CREATE INDEX `FK_message_logs_message_queues_idx` ON `message_logs` (`message_queue_id` ASC);


-- -----------------------------------------------------
-- Table `message_queue_attachments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `message_queue_attachments` (
  `message_queue_attachment_id` INT NOT NULL AUTO_INCREMENT,
  `message_queue_id` INT(11) NOT NULL,
  `state` CHAR(1) NULL DEFAULT NULL,
  `guid` VARCHAR(40) NULL DEFAULT NULL,
  `filesize` INT NULL DEFAULT NULL,
  `filename` VARCHAR(100) NULL DEFAULT NULL,
  PRIMARY KEY (`message_queue_attachment_id`),
  CONSTRAINT `FK_message_queue_attachments_message_queues`
	FOREIGN KEY (`message_queue_id`)
	REFERENCES `message_queues` (`message_queue_id`));

CREATE INDEX `FK_message_queue_attachments_message_queues_idx` ON `message_queue_attachments` (`message_queue_id` ASC);


-- -----------------------------------------------------
-- Table `processes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `processes` (
  `process_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NULL DEFAULT NULL,
  `state` CHAR(1) NULL DEFAULT NULL,
  `percent` SMALLINT NULL DEFAULT NULL,
  `type` CHAR(1) NULL DEFAULT NULL,
  `message` VARCHAR(300) NULL DEFAULT NULL,
  `created_time` INT NULL DEFAULT NULL,
  `start_time` INT NULL DEFAULT NULL,
  `end_time` INT NULL DEFAULT NULL,
  `notify` VARCHAR(400) NULL DEFAULT NULL,
  `guid` VARCHAR(40) NULL DEFAULT NULL,
  `object` TEXT NULL DEFAULT NULL,
  `filename` VARCHAR(100) NULL DEFAULT NULL,
  `stats` TEXT NULL DEFAULT NULL,
  `description` VARCHAR(300) NULL DEFAULT NULL,
  PRIMARY KEY (`process_id`));


-- -----------------------------------------------------
-- Table `roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `roles` (
  `role_id` INT(11) NOT NULL AUTO_INCREMENT,
  `role` CHAR(2) CHARACTER SET 'utf8' NOT NULL,
  `name` VARCHAR(40) CHARACTER SET 'utf8' NULL DEFAULT NULL,
  PRIMARY KEY (`role_id`));


-- -----------------------------------------------------
-- Table `settings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `settings` (
  `setting_id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(40) CHARACTER SET 'utf8' NOT NULL,
  `value` VARCHAR(255) CHARACTER SET 'utf8' NOT NULL,
  `data_type` CHAR(1) CHARACTER SET 'utf8' NOT NULL,
  `default` VARCHAR(255) CHARACTER SET 'utf8' NULL DEFAULT NULL,
  `interface_type` VARCHAR(40) CHARACTER SET 'utf8' NULL DEFAULT NULL,
  `label` VARCHAR(40) CHARACTER SET 'utf8' NULL DEFAULT NULL,
  `values` VARCHAR(255) CHARACTER SET 'utf8' NULL DEFAULT NULL,
  `multiple_value` CHAR(1) CHARACTER SET 'utf8' NULL DEFAULT NULL,
  `group` CHAR(2) NULL DEFAULT NULL,
  PRIMARY KEY (`setting_id`));

CREATE UNIQUE INDEX `IX_settings1_idx` ON `settings` (`name` ASC);


-- -----------------------------------------------------
-- Table `site_content_widgets`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `site_content_widgets` (
  `site_content_widget_id` INT(11) NOT NULL AUTO_INCREMENT,
  `content` TEXT CHARACTER SET 'utf8' NULL DEFAULT NULL,
  `state` CHAR(1) CHARACTER SET 'utf8' NOT NULL,
  `modified_date` DATETIME NULL DEFAULT NULL,
  `create_date` DATETIME NULL DEFAULT NULL,
  `name` VARCHAR(40) CHARACTER SET 'utf8' NULL DEFAULT NULL,
  `tag` VARCHAR(40) CHARACTER SET 'utf8' NULL DEFAULT NULL,
  `tag_readonly` CHAR(1) CHARACTER SET 'utf8' NULL DEFAULT 0,
  `source` CHAR(1) NULL DEFAULT NULL,
  `default` TEXT NULL DEFAULT NULL,
  `var_data` VARCHAR(1000) NULL DEFAULT NULL,
  PRIMARY KEY (`site_content_widget_id`));

CREATE UNIQUE INDEX `IX_site_content_widgets1` ON `site_content_widgets` (`tag` ASC);


-- -----------------------------------------------------
-- Table `sms_messages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sms_messages` (
  `sms_message_id` INT(11) NOT NULL,
  `message_template_id` INT NULL DEFAULT NULL,
  `message` VARCHAR(300) NULL DEFAULT NULL,
  `from_number` VARCHAR(30) NULL DEFAULT NULL,
  PRIMARY KEY (`sms_message_id`),
  CONSTRAINT `FK_sms_messages_messages`
	FOREIGN KEY (`sms_message_id`)
	REFERENCES `messages` (`message_id`),
  CONSTRAINT `FK_sms_messages_message_templates`
	FOREIGN KEY (`message_template_id`)
	REFERENCES `message_templates` (`message_template_id`));

CREATE INDEX `FK_sms_messages_message_templates_idx` ON `sms_messages` (`message_template_id` ASC);


-- -----------------------------------------------------
-- Table `sms_message_queues`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sms_message_queues` (
  `sms_message_queue_id` INT(11) NOT NULL,
  `to_number` VARCHAR(40) NULL DEFAULT NULL,
  `from_number` VARCHAR(40) NULL DEFAULT NULL,
  `body` VARCHAR(300) NULL DEFAULT NULL,
  PRIMARY KEY (`sms_message_queue_id`),
  CONSTRAINT `FK_sms_message_queues_message_queues`
	FOREIGN KEY (`sms_message_queue_id`)
	REFERENCES `message_queues` (`message_queue_id`));


-- -----------------------------------------------------
-- Table `user_roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user_roles` (
  `user_role_id` INT(11) NOT NULL AUTO_INCREMENT,
  `role_id` INT(11) NOT NULL,
  `user_id` INT(11) NOT NULL,
  PRIMARY KEY (`user_role_id`),
  CONSTRAINT `FK_user_roles_roles`
	FOREIGN KEY (`role_id`)
	REFERENCES `roles` (`role_id`)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION,
  CONSTRAINT `FK_user_roles_users`
	FOREIGN KEY (`user_id`)
	REFERENCES `users` (`user_id`)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION);

CREATE INDEX `IX_user_roles_roles` ON `user_roles` (`role_id` ASC);

CREATE INDEX `IX_user_roles_users` ON `user_roles` (`user_id` ASC);


-- -----------------------------------------------------
-- Table `user_sessions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user_sessions` (
  `user_session_id` VARCHAR(40) CHARACTER SET 'utf8' NOT NULL,
  `user_id` INT(11) NULL,
  `data` TEXT CHARACTER SET 'utf8' NULL DEFAULT NULL,
  `expiry_date` DATETIME NOT NULL,
  `ip_address` VARCHAR(15) CHARACTER SET 'utf8' NULL,
  `create_date` DATETIME NULL,
  PRIMARY KEY (`user_session_id`),
  CONSTRAINT `fk_user_sessions_users1`
	FOREIGN KEY (`user_id`)
	REFERENCES `users` (`user_id`)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION);

CREATE INDEX `IX_user_sessions1` ON `user_sessions` (`expiry_date` ASC);

CREATE INDEX `fk_user_sessions_users1_idx` ON `user_sessions` (`user_id` ASC);


-- -----------------------------------------------------
-- Table `user_password_resets`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user_password_resets` (
  `user_password_reset_id` INT NOT NULL AUTO_INCREMENT,
  `create_date` DATETIME NULL,
  `guid` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `phone` VARCHAR(45) NULL,
  `user_id` INT(11) NOT NULL,
  `ip` VARCHAR(20) NULL,
  `state` VARCHAR(20) NULL,
  PRIMARY KEY (`user_password_reset_id`),
  CONSTRAINT `fk_user_password_resets_users1`
	FOREIGN KEY (`user_id`)
	REFERENCES `users` (`user_id`)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_user_password_resets_users1_idx` ON `user_password_resets` (`user_id` ASC);


-- -----------------------------------------------------
-- Table `account_roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `account_roles` (
  `account_role_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(40) NULL,
  `state` VARCHAR(40) NULL,
  `abr` VARCHAR(10) NULL,
  `color` VARCHAR(10) NULL,
  `permissions` VARCHAR(500) NULL,
  PRIMARY KEY (`account_role_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `account_user_roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `account_user_roles` (
  `account_user_role_id` INT NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(40) NULL,
  `account_role_id` INT NOT NULL,
  `account_user_id` INT NOT NULL,
  PRIMARY KEY (`account_user_role_id`),
  CONSTRAINT `fk_account_user_roles_account_roles1`
	FOREIGN KEY (`account_role_id`)
	REFERENCES `account_roles` (`account_role_id`)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION,
  CONSTRAINT `fk_account_user_roles_account_users1`
	FOREIGN KEY (`account_user_id`)
	REFERENCES `account_users` (`account_user_id`)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_account_user_roles_account_roles1_idx` ON `account_user_roles` (`account_role_id` ASC);

CREATE INDEX `fk_account_user_roles_account_users1_idx` ON `account_user_roles` (`account_user_id` ASC);


-- -----------------------------------------------------
-- Table `audits`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `audits` (
  `audit_id` INT NOT NULL AUTO_INCREMENT,
  `state` VARCHAR(40) NULL,
  `type` VARCHAR(40) NULL,
  `create_date` DATETIME NULL,
  `file_id` INT NULL,
  `user_id` INT(11) NULL,
  `file_version_id` INT NULL,
  PRIMARY KEY (`audit_id`),
  CONSTRAINT `fk_audits_users1`
	FOREIGN KEY (`user_id`)
	REFERENCES `users` (`user_id`)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_audits_users1_idx` ON `audits` (`user_id` ASC);


-- -----------------------------------------------------
-- Table `impersonates`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `impersonates` (
  `impersonate_id` INT NOT NULL AUTO_INCREMENT,
  `state` VARCHAR(15) NULL,
  `ip` VARCHAR(40) NULL,
  `user_agent` VARCHAR(400) NULL,
  `create_date` DATETIME NULL,
  `guid` VARCHAR(40) NULL,
  `activate_date` DATETIME NULL,
  `user_id` INT(11) NOT NULL,
  `impersonated_user_id` INT(11) NOT NULL,
  PRIMARY KEY (`impersonate_id`),
  CONSTRAINT `fk_impersonates_users1`
	FOREIGN KEY (`user_id`)
	REFERENCES `users` (`user_id`)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION,
  CONSTRAINT `fk_impersonates_users2`
	FOREIGN KEY (`impersonated_user_id`)
	REFERENCES `users` (`user_id`)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_impersonates_users1_idx` ON `impersonates` (`user_id` ASC);

CREATE INDEX `fk_impersonates_users2_idx` ON `impersonates` (`impersonated_user_id` ASC);


-- -----------------------------------------------------
-- Table `logins`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `logins` (
  `login_id` INT NOT NULL AUTO_INCREMENT,
  `create_date` DATETIME NULL,
  `ip` VARCHAR(20) NULL,
  `email` VARCHAR(40) NULL,
  `user_agent` VARCHAR(200) NULL,
  `user_id` INT(11) NULL,
  PRIMARY KEY (`login_id`),
  CONSTRAINT `fk_logins_users1`
	FOREIGN KEY (`user_id`)
	REFERENCES `users` (`user_id`)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_logins_users1_idx` ON `logins` (`user_id` ASC);

CREATE TABLE IF NOT EXISTS `api_logs` (
  `api_log_id` INT NOT NULL AUTO_INCREMENT,
  `create_date` DATETIME NULL,
  `request` TEXT NULL,
  `response` TEXT NULL,
  `state` VARCHAR(15) NULL,
  `headers` TEXT NULL,
  `url` VARCHAR(400) NULL,
  `code` INT NULL,
  `direction` VARCHAR(15) NULL,
  `reference` VARCHAR(40) NULL,
  `message` VARCHAR(300) NULL,
  `type` VARCHAR(20) NULL,
  `length` INT NULL,
  `method` VARCHAR(10),
  PRIMARY KEY (`api_log_id`))
ENGINE = InnoDB;


	CREATE TABLE IF NOT EXISTS `audits` (
		`audit_id` INT NOT NULL AUTO_INCREMENT,
		`create_date` DATETIME NULL,
		`type` VARCHAR(40) NULL,
		`user_id` INT(11) NOT NULL,
		`action` VARCHAR(40) NULL,
		`meta` VARCHAR(3000) NULL,
		PRIMARY KEY (`audit_id`),
		INDEX `fk_audits_users1_idx` (`user_id` ASC),
		CONSTRAINT `fk_audits_users1` FOREIGN KEY (`user_id`) REFERENCES `users` (`user_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
	)
	ENGINE = InnoDB;

	CREATE TABLE IF NOT EXISTS `indexes` (
		  `index_id` INT NOT NULL AUTO_INCREMENT,
		  `name` VARCHAR(300) NULL,
		  `primary_keyword` VARCHAR(100) NULL,
		  `secondary_keyword` VARCHAR(1000) NULL,
		  `image_url` VARCHAR(200) NULL,
		  `type` VARCHAR(20) NULL,
		  `state` VARCHAR(20) NULL,
		  PRIMARY KEY (`index_id`)
	)
	ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
");
		}

		function upgrade_init() {
			return CMODEL_INIT::create()->init_settings();
		}

		function upgrade_default_user() {
		  return CMODEL_USER::create()
					->set_first_name("Admin")
					->set_last_name("Istrator")
					->set_email("admin@admin.com")
					->set_password(CMODEL_USER::encrypt_password("admin"))
					->set_permissions([CMODEL_USER::PERMISSION_BACKEND])
					->save();
		}
	}
